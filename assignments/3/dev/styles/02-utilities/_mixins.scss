@mixin transition($property: all, $duration: 1s,
   $timing_function: ease-out, $delay: 0s) {
  -webkit-transition: $property $duration $timing_function $delay;
     -moz-transition: $property $duration $timing_function $delay;
       -o-transition: $property $duration $timing_function $delay;
          transition: $property $duration $timing_function $delay;
}

// ============================================================================
// Full Flex Browser Support
// ============================================================================
@mixin flexbox {
   display: -webkit-box;
   display: -webkit-flex;
   display: -moz-flex;
   display: -ms-flexbox;
   display: flex;
}

@mixin flex-direction($value: row) {
   @if $value == column {
      -webkit-box-direction: normal;
      -webkit-box-orient: vertical;
   } @else {
      -webkit-box-direction: normal;
      -webkit-box-orient: horizontal;
   }
   -webkit-flex-direction: $value;
   -moz-flex-direction: $value;
   -ms-flex-direction: $value;
   flex-direction: $value;
}

@mixin flex-wrap($value: nowrap) {
     // No Webkit Box fallback.
   -webkit-flex-wrap: $value;
   -moz-flex-wrap: $value;
   @if $value == nowrap {
      -ms-flex-wrap: none;
   } @else {
      -ms-flex-wrap: $value;
   }
   flex-wrap: $value;
}

@mixin flex-flow($values: (row nowrap)) {
   // No Webkit Box fallback.
   -webkit-flex-flow: $values;
   -moz-flex-flow: $values;
   -ms-flex-flow: $values;
   flex-flow: $values;  
}

@mixin order($int: 0) {
   -webkit-box-ordinal-group: $int + 1;
   -webkit-order: $int;
   -moz-order: $int;
   -ms-flex-order: $int;
   order: $int;  
}

@mixin flex($fg: 1, $fs: null, $fb: null) {

   // Set a variable to be used by box-flex properties
   $fg-boxflex: $fg;

   // Box-Flex only supports a flex-grow value so lets grab the
   // first item in the list and just return that.
   @if type-of($fg) == 'list' {
         $fg-boxflex: nth($fg, 1);
      }
      -webkit-box-flex: $fg-boxflex;
      -webkit-flex: $fg $fs $fb;
      -moz-box-flex: $fg-boxflex;
      -moz-flex: $fg $fs $fb;
      -ms-flex: $fg $fs $fb;
      flex: $fg $fs $fb;
}

@mixin align-items($value: stretch) {
   @if $value == flex-start {
      -webkit-box-align: start;
      -ms-flex-align: start;
   } @else if $value == flex-end {
      -webkit-box-align: end;
      -ms-flex-align: end;
      } @else {
         -webkit-box-align: $value;
         -ms-flex-align: $value;
   }
   -webkit-align-items: $value;
   -moz-align-items: $value;
   align-items: $value;
}

@mixin align-self($value: auto) {
   // No Webkit Box Fallback.
   -webkit-align-self: $value;
   -moz-align-self: $value;
   @if $value == flex-start {
      -ms-flex-item-align: start;
      } @else if $value == flex-end {
         -ms-flex-item-align: end;
      } @else {
         -ms-flex-item-align: $value;
   }
   align-self: $value;
}

@mixin align-content($value: stretch) {
   // No Webkit Box Fallback.
   -webkit-align-content: $value;
   -moz-align-content: $value;
   @if $value == flex-start {
      -ms-flex-line-pack: start;
      } @else if $value == flex-end {
         -ms-flex-line-pack: end;
      } @else {
         -ms-flex-line-pack: $value;
      }
      align-content: $value;
}

@mixin keyframes ($animation-name) {
   @-webkit-keyframes $animation-name{
            @content;
      }
      @-moz-keyframes $animation-name{
            @content;
      }
      @-ms-keyframes $animation-name{
            @content;
      }
      @-o-keyframes $animation-name{
            @content;
      }
      @keyframes $animation-name{
            @content;
      }
}

// ============================================================================
// RESPONSIVE
// ============================================================================


@mixin break-med {
  @media (min-width: $width-ipad) { 
      .img-sm {display:none;}
      .img-med {display: block;}
      @content; }
}

@mixin break-lg {
  @media only screen and (min-width: $width-large) { 
      .img-sm {display:none;}
      .img-med {display:none;}
      .img-lg {display: block;}
      .rawimg-med {display:none;}
      .rawimg-lg {display: block;}
      @content; }
}
